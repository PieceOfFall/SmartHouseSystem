<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fall.smarthouse.mapper.SensorMapper">
    <select id="testMapper" resultType="com.fall.smarthouse.model.Sensor">
        select * from sensor
    </select>

<!--    Integer insertToSensor(Sensor sensor);-->
    <insert id="insertToSensor">
        insert into sensor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="time != null">
                time,
            </if>
            <if test="gas != null">
                gas,
            </if>
            <if test="smog != null">
                smog,
            </if>
            <if test="temperature != null">
                temperature,
            </if>
            <if test="humidity != null">
                humidity,
            </if>
            <if test="shake != null">
                shake,
            </if>
        </trim>
        <trim prefix="values(" suffix=")" suffixOverrides=",">
            <if test="time != null">
                FROM_UNIXTIME(#{time,jdbcType=BIGINT}, '%Y-%m-%d %H:%i:%s'),
            </if>
            <if test="gas != null">
                #{gas},
            </if>
            <if test="smog != null">
                #{smog},
            </if>
            <if test="temperature != null">
                #{temperature},
            </if>
            <if test="humidity != null">
                #{humidity},
            </if>
            <if test="shake != null">
                #{shake},
            </if>
        </trim>
    </insert>
<!--    List<Sensor> pollingSelectSensorData(Timestamp time);-->
    <select id="pollingSelectSensorData" resultType="com.fall.smarthouse.model.Sensor">
        select UNIX_TIMESTAMP(`time`),gas,smog,temperature,humidity,shake
        from sensor
        where `time` >= DATE_SUB(#{time},INTERVAL 5 MINUTE) order by `time`
    </select>
<!--    List<Sensor> selectSensorDataByTime(Timestamp minTime,Timestamp maxTime);-->
    <select id="selectSensorDataByTime" resultType="com.fall.smarthouse.model.Sensor">
        select UNIX_TIMESTAMP(`time`),gas,smog,temperature,humidity,shake
        from sensor
        where `time` between #{minTime} and #{maxTime} order by `time`
    </select>
<!--    List<Double> selectAbnormalGasData(Timestamp startTime);-->
    <select id="selectAbnormalGasData" resultType="java.lang.Double">
        select gas from sensor where `time` between #{startTime} and (
            select end_time from abnormal where start_time = #{startTime}
            )
    </select>
<!--    List<Double> selectAbnormalSmogData(Timestamp startTime);-->
    <select id="selectAbnormalSmogData" resultType="java.lang.Double">
        select smog from sensor where `time` between #{startTime} and (
            select end_time from abnormal where start_time = #{startTime}
        )
    </select>
<!--    List<Double> selectAbnormalTemperatureData(Timestamp startTime);-->
    <select id="selectAbnormalTemperatureData" resultType="java.lang.Double">
        select temperature from sensor where `time` between #{startTime} and (
            select end_time from abnormal where start_time = #{startTime}
        )
    </select>
<!--    List<Double> selectAbnormalHumidityData(Timestamp startTime);-->
    <select id="selectAbnormalHumidityData" resultType="java.lang.Double">
        select humidity from sensor where `time` between #{startTime} and (
            select end_time from abnormal where start_time = #{startTime}
        )
    </select>
<!--    List<Double> selectAbnormalShakeData(Timestamp startTime);-->
    <select id="selectAbnormalShakeData" resultType="java.lang.Double">
        select shake from sensor where `time` between #{startTime} and (
            select end_time from abnormal where start_time = #{startTime}
        )
    </select>


<!--    List<Map> selectAbnormalSensorData(Sensor sensor, Timestamp startTime,Character queryType);-->
    <select id="selectAbnormalSensorData" resultMap="returnMap">
        select
        <trim>
            <if test="queryType == 's' ">
                CONCAT(UNIX_TIMESTAMP(`time`),'000')
            </if>
            <if test="queryType == 'm' ">
                REPLACE(UNIX_TIMESTAMP(DATE_FORMAT(time,'%Y-%m-%d %H:%i:00')),'.000000','000')
            </if>
            <if test="queryType == 'h' ">
                REPLACE(UNIX_TIMESTAMP(DATE_FORMAT(time,'%Y-%m-%d %H:00:00')),'.000000','000')
            </if>
            <if test="queryType == 'd' ">
                REPLACE(UNIX_TIMESTAMP(DATE_FORMAT(time,'%Y-%m-%d')),'.000000','000')
            </if>
        </trim>
        as `date`,
        <trim suffixOverrides=",">
            <if test="sensor.gas == 1">
                AVG(gas) as avg_gas,
            </if>
            <if test="sensor.smog == 1">
                AVG(smog) as avg_smog,
            </if>
            <if test="sensor.temperature == 1">
                AVG(temperature) as avg_temperature,
            </if>
            <if test="sensor.humidity == 1">
                AVG(humidity) as avg_humidity,
            </if>
            <if test="sensor.shake == 1">
                AVG(shake) as avg_shake,
            </if>
        </trim>
        where `time` between #{startTime} and (
        select end_time from abnormal where start_time = #{startTime})
        group by `date`
    </select>

<!--    List<HashMap<String,Object>> testMap(Timestamp minTime,Timestamp maxTime);-->
    <resultMap id="testMap" type="java.util.Map">
        <result property="day" column="day" javaType="java.lang.Long"></result>
        <result property="smog" column="avg_smog" javaType="java.lang.Double"></result>
        <result property="gas" column="avg_gas" javaType="java.lang.Double"></result>
    </resultMap>
    <select id="testMap" resultMap="testMap">
        SELECT REPLACE(UNIX_TIMESTAMP(DATE_FORMAT(time,'%Y-%m-%d')),'.000000','000') as `day`, AVG(smog) as avg_smog
        FROM `sensor` group by `day`
    </select>

<!--        List<Map> selectSensorDataByQueryType(Timestamp minTime,Timestamp maxTime,Sensor sensor,Character queryType);-->
    <resultMap id="returnMap" type="java.util.Map">
        <result property="time" column="date" javaType="java.lang.Long"></result>
        <result property="smog" column="avg_smog" javaType="java.lang.Double"></result>
        <result property="gas" column="avg_gas" javaType="java.lang.Double"></result>
        <result property="temperature" column="avg_temperature" javaType="java.lang.Double"></result>
        <result property="humidity" column="avg_humidity" javaType="java.lang.Double"></result>
        <result property="shake" column="avg_shake" javaType="java.lang.Double"></result>
    </resultMap>

    <select id="selectSensorDataByQueryType" resultMap="returnMap">
        select
        <trim>
            <if test="queryType == 's' ">
                CONCAT(UNIX_TIMESTAMP(`time`),'000')
            </if>
            <if test="queryType == 'm' ">
                REPLACE(UNIX_TIMESTAMP(DATE_FORMAT(time,'%Y-%m-%d %H:%i:00')),'.000000','000')
            </if>
            <if test="queryType == 'h' ">
                REPLACE(UNIX_TIMESTAMP(DATE_FORMAT(time,'%Y-%m-%d %H:00:00')),'.000000','000')
            </if>
            <if test="queryType == 'd' ">
                REPLACE(UNIX_TIMESTAMP(DATE_FORMAT(time,'%Y-%m-%d')),'.000000','000')
            </if>
        </trim>
        as `date`,
        <trim suffixOverrides=",">
            <if test="sensor.gas == 1">
                AVG(gas) as avg_gas,
            </if>
            <if test="sensor.smog == 1">
                AVG(smog) as avg_smog,
            </if>
            <if test="sensor.temperature == 1">
                AVG(temperature) as avg_temperature,
            </if>
            <if test="sensor.humidity == 1">
                AVG(humidity) as avg_humidity,
            </if>
            <if test="sensor.shake == 1">
                AVG(shake) as avg_shake,
            </if>
        </trim>
        from sensor where `time` >= #{minTime} <![CDATA[<=]]> #{maxTime}
        group by `date`
    </select>
</mapper>